<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:Window" Name="appName" />
      <Variable x:TypeArguments="ui:Window" Name="appWindow" />
      <Variable x:TypeArguments="x:String" Name="fullpath" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_11">
        <Sequence sap2010:Annotation.AnnotationText="Dependency: user needs to first open Design -&gt; Recording -&gt; Basic" DisplayName="Sanity for Basic recording window" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="basicRecordingWindow" />
          </Sequence.Variables>
          <Delay Duration="00:00:02" sap2010:WorkflowViewState.IdRef="Delay_5" />
          <ui:UiElementExists DisplayName="Basic Recording Window Opened?" Exists="[basicRecordingWindow]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="00ca924afb9030ea818a63ed51cd170d" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[basicRecordingWindow =True]" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
                <Sequence DisplayName="Check Basic Recording buttons" sap2010:WorkflowViewState.IdRef="Sequence_42">
                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_7" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                    <ui:WindowScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="ui:GenericValue" Name="saveExitButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="recordButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="startAppButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="clickButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="typeButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="copyButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="elementButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="textButton" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="imageButton" />
                          </Sequence.Variables>
                          <Sequence DisplayName="Check Wizards buttons" sap2010:WorkflowViewState.IdRef="Sequence_39">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="wizardsText" />
                            </Sequence.Variables>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Wizard group text" sap2010:WorkflowViewState.IdRef="GetValue_20">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="0c87a48c7a9ca4ad7828e8d5ec6814b2" Selector="&lt;ctrl name='Wizards' role='grouping' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[wizardsText]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[wizardsText = &quot;Wizards&quot;]" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_70" Level="Info" Message="Wizards text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_71" Level="Error" Message="[&quot;Wizards text is &quot; + wizardsText + &quot; instead of Wizards&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Save &amp; Exit text" sap2010:WorkflowViewState.IdRef="GetValue_21">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="5b55d3d7e53e26421f646efc9915aafd" Selector="&lt;ctrl name='Wizards' role='grouping' /&gt;&lt;ctrl name='Save &amp;amp; Exit' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[saveExitButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[saveExitButton = &quot;Save &amp; Exit&quot;]" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_72" Level="Info" Message="Save &amp; Exit text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_73" Level="Error" Message="[&quot;Save &amp; Exit text is &quot; + saveExitButton + &quot; instead of Save &amp; Exit&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Record text" sap2010:WorkflowViewState.IdRef="GetValue_22">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="62e8aebed230c003725f3f065cced78a" Selector="&lt;ctrl name='Wizards' role='grouping' /&gt;&lt;ctrl name='Record' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[recordButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[recordButton = &quot;Record&quot;]" sap2010:WorkflowViewState.IdRef="If_6">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_74" Level="Info" Message="Record text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_75" Level="Error" Message="[&quot;Record is &quot; + recordButton + &quot; instead of Record&quot;]" />
                              </If.Else>
                            </If>
                          </Sequence>
                          <Sequence DisplayName="Check Actions buttons" sap2010:WorkflowViewState.IdRef="Sequence_40">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="actionsText" />
                            </Sequence.Variables>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Actions group text" sap2010:WorkflowViewState.IdRef="GetValue_23">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="491419d8aa1456be2563df530e508ed9" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[actionsText]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[actionsText = &quot;Actions&quot;]" sap2010:WorkflowViewState.IdRef="If_7">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_76" Level="Info" Message="Actions group text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_77" Level="Error" Message="[&quot;Actions group text is &quot; + actionsText + &quot; instead of Actions&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Start App text" sap2010:WorkflowViewState.IdRef="GetValue_24">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1f9ce40113813bd88b645d4d2a0a501f" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Start App' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[startAppButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[startAppButton = &quot;Start App&quot;]" sap2010:WorkflowViewState.IdRef="If_8">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_78" Level="Info" Message="Start App text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_79" Level="Error" Message="[&quot;Start App text is &quot; + startAppButton + &quot; instead of Start App&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Click text" sap2010:WorkflowViewState.IdRef="GetValue_25">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8783636426b2d6eccb333ceec570466c" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl idx='1' name='Click' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[clickButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[clickButton = &quot;Click&quot;]" sap2010:WorkflowViewState.IdRef="If_9">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_80" Level="Info" Message="Click text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_81" Level="Error" Message="[&quot;Click text is &quot; + clickButton + &quot; instead of Click&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Type text" sap2010:WorkflowViewState.IdRef="GetValue_26">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="202f87e57f8811150167ef31735cff4e" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl idx='1' name='Type' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[typeButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[typeButton = &quot;Type&quot;]" sap2010:WorkflowViewState.IdRef="If_10">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_82" Level="Info" Message="Type text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_83" Level="Error" Message="[&quot;Type text is &quot; + typeButton + &quot; instead of Type&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Copy text" sap2010:WorkflowViewState.IdRef="GetValue_27">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1bddc5cfa93e9d5c88184a5254f51bc4" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl idx='1' name='Copy' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[copyButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[copyButton = &quot;Copy&quot;]" sap2010:WorkflowViewState.IdRef="If_11">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_84" Level="Info" Message="Copy text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_85" Level="Error" Message="[&quot;Copy text is &quot; + copyButton + &quot; instead of Copy&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Element text" sap2010:WorkflowViewState.IdRef="GetValue_28">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="691a4990315e016a4107c194370e488f" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Element' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[elementButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[elementButton = &quot;Element&quot;]" sap2010:WorkflowViewState.IdRef="If_12">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_86" Level="Info" Message="Element text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_87" Level="Error" Message="[&quot;Element text is &quot; + elementButton + &quot; instead of Element&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Text text" sap2010:WorkflowViewState.IdRef="GetValue_29">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="867196779af110d1c19cba8cce4d081b" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Text' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[textButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[textButton = &quot;Text&quot;]" sap2010:WorkflowViewState.IdRef="If_13">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_88" Level="Info" Message="Text text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_89" Level="Error" Message="[&quot;Text text is &quot; + textButton + &quot; instead of Text&quot;]" />
                              </If.Else>
                            </If>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check Image text" sap2010:WorkflowViewState.IdRef="GetValue_30">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="bf6f421eea17b17cd2f580228c24531a" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Image' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[imageButton]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <If Condition="[imageButton = &quot;Image&quot;]" sap2010:WorkflowViewState.IdRef="If_14">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_90" Level="Info" Message="Image text is correct" />
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_91" Level="Error" Message="[&quot;Image text is &quot; + imageButton + &quot; instead of Image&quot;]" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:WindowScope.Body>
                  </ui:WindowScope>
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="Error" Message="Basic Recording Window not opened" />
            </If.Else>
          </If>
          <Delay Duration="00:00:02" sap2010:WorkflowViewState.IdRef="Delay_7" />
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_17">
            <Sequence DisplayName="Check Start App button" sap2010:WorkflowViewState.IdRef="Sequence_76">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
              </Sequence.Variables>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_14" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_75">
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Start App context menu" sap2010:WorkflowViewState.IdRef="Click_199" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="56a92883542fe0e0053e2be46bd34da5" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Start App' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                        </ui:Click.Target>
                      </ui:Click>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Start App", "Close App"}]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[expectedValues]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_74">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                              </Sequence.Variables>
                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                <TryCatch.Try>
                                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_57">
                                    <ui:GetValue.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                    </ui:GetValue.Target>
                                    <ui:GetValue.Value>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                    </ui:GetValue.Value>
                                  </ui:GetValue>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                    <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72">
                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_143" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_42">
                                <If.Then>
                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_144" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_73">
                                    <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_41">
                                      <If.Else>
                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_145" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                <Sequence DisplayName="Check Click button" sap2010:WorkflowViewState.IdRef="Sequence_81">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                  </Sequence.Variables>
                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_15" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                    <ui:WindowScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_80">
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Click context menu" sap2010:WorkflowViewState.IdRef="Click_201" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9b976bc673bf189f549f580e5ee6ac99" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl idx='1' name='Click' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                            </ui:Click.Target>
                          </ui:Click>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Click", "Select Item", "Check"}]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[expectedValues]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                    <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                  </Sequence.Variables>
                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <TryCatch.Try>
                                      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_58">
                                        <ui:GetValue.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                        </ui:GetValue.Target>
                                        <ui:GetValue.Value>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                        </ui:GetValue.Value>
                                      </ui:GetValue>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                        <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_146" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_44">
                                    <If.Then>
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_147" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_78">
                                        <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_43">
                                          <If.Else>
                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_148" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </ui:WindowScope.Body>
                  </ui:WindowScope>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                    <Sequence DisplayName="Check Type button" sap2010:WorkflowViewState.IdRef="Sequence_86">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                      </Sequence.Variables>
                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_16" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                        <ui:WindowScope.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_85">
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Type context menu" sap2010:WorkflowViewState.IdRef="Click_203" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="202f87e57f8811150167ef31735cff4e" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl idx='1' name='Type' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                                </ui:Click.Target>
                              </ui:Click>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Type", "Send Hotkey"}]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[expectedValues]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                        <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                      </Sequence.Variables>
                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                        <TryCatch.Try>
                                          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_59">
                                            <ui:GetValue.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                            </ui:GetValue.Target>
                                            <ui:GetValue.Value>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                            </ui:GetValue.Value>
                                          </ui:GetValue>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                            <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_149" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_46">
                                        <If.Then>
                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_150" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                                            <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_45">
                                              <If.Else>
                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_151" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                          </ActivityAction>
                        </ui:WindowScope.Body>
                      </ui:WindowScope>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                        <Sequence DisplayName="Check Copy button" sap2010:WorkflowViewState.IdRef="Sequence_91">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                          </Sequence.Variables>
                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_17" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                            <ui:WindowScope.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Copy context menu" sap2010:WorkflowViewState.IdRef="Click_205" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1923be8315fa71288f1f342cfcca0cc8" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl idx='1' name='Copy' role='split button' /&gt;" WaitForReady="INTERACTIVE" />
                                    </ui:Click.Target>
                                  </ui:Click>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Copy Text", "Screen Scraping"}]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[expectedValues]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                            <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                          </Sequence.Variables>
                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                            <TryCatch.Try>
                                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_60">
                                                <ui:GetValue.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                </ui:GetValue.Target>
                                                <ui:GetValue.Value>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                </ui:GetValue.Value>
                                              </ui:GetValue>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_87">
                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_152" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_48">
                                            <If.Then>
                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_153" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_88">
                                                <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_47">
                                                  <If.Else>
                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_154" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                </Sequence>
                              </ActivityAction>
                            </ui:WindowScope.Body>
                          </ui:WindowScope>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                            <Sequence DisplayName="Check Element button" sap2010:WorkflowViewState.IdRef="Sequence_96">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                              </Sequence.Variables>
                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_18" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                <ui:WindowScope.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Element context menu" sap2010:WorkflowViewState.IdRef="Click_206" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="691a4990315e016a4107c194370e488f" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Element' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Mouse", "Keyboard", "Control", "Find", "Window"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[expectedValues]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="x:Object">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                              </Sequence.Variables>
                                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                                <TryCatch.Try>
                                                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_61">
                                                    <ui:GetValue.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                    </ui:GetValue.Target>
                                                    <ui:GetValue.Value>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                    </ui:GetValue.Value>
                                                  </ui:GetValue>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                    <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_92">
                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_155" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_50">
                                                <If.Then>
                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_156" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_93">
                                                    <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_49">
                                                      <If.Else>
                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_157" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:WindowScope.Body>
                              </ui:WindowScope>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_22">
                                <Sequence DisplayName="Check Element -&gt; Mouse button" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                  </Sequence.Variables>
                                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_19" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                    <ui:WindowScope.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_100">
                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Element context menu" sap2010:WorkflowViewState.IdRef="Click_207" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="48a271f2bce8c9702c967bc615d8d6ce" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='Mouse' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                            </ui:Click.Target>
                                          </ui:Click>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Click", "Click Relative", "Right Click", "Double Click", "Hover"}]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[expectedValues]">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                  </Sequence.Variables>
                                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                                    <TryCatch.Try>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_102">
                                                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_63">
                                                          <ui:GetValue.Target>
                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                          </ui:GetValue.Target>
                                                          <ui:GetValue.Value>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                          </ui:GetValue.Value>
                                                        </ui:GetValue>
                                                      </Sequence>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                        <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_97">
                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_158" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_52">
                                                    <If.Then>
                                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_159" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_98">
                                                        <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_51">
                                                          <If.Else>
                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_160" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                          </If.Else>
                                                        </If>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                          </ui:ForEach>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:WindowScope.Body>
                                  </ui:WindowScope>
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_23">
                                    <Sequence DisplayName="Check Element -&gt; Keyboard button" sap2010:WorkflowViewState.IdRef="Sequence_108">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                      </Sequence.Variables>
                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_20" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                        <ui:WindowScope.Body>
                                          <ActivityAction x:TypeArguments="x:Object">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                            </ActivityAction.Argument>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_107">
                                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Keyboard context menu" sap2010:WorkflowViewState.IdRef="Click_208" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                <ui:Click.CursorPosition>
                                                  <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                </ui:Click.CursorPosition>
                                                <ui:Click.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1b7ebcd0e2cafcc8e558e38d5ba85b07" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='2' /&gt;&lt;ctrl name='Keyboard' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                </ui:Click.Target>
                                              </ui:Click>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Type", "Send Hotkey"}]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[expectedValues]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:Object">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_106">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                        <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                      </Sequence.Variables>
                                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                        <TryCatch.Try>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_103">
                                                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_64">
                                                              <ui:GetValue.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                              </ui:GetValue.Target>
                                                              <ui:GetValue.Value>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                              </ui:GetValue.Value>
                                                            </ui:GetValue>
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                                            <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_104">
                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_161" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                      <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_54">
                                                        <If.Then>
                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_162" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_105">
                                                            <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_53">
                                                              <If.Else>
                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_163" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                              </If.Else>
                                                            </If>
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:WindowScope.Body>
                                      </ui:WindowScope>
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                                        <Sequence DisplayName="Check Element -&gt; Control button" sap2010:WorkflowViewState.IdRef="Sequence_114">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                          </Sequence.Variables>
                                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_21" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                            <ui:WindowScope.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                </ActivityAction.Argument>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_113">
                                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Control context menu" sap2010:WorkflowViewState.IdRef="Click_209" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                    <ui:Click.CursorPosition>
                                                      <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                    </ui:Click.CursorPosition>
                                                    <ui:Click.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="3e3ec4576f80fb805ebb9536ad868b51" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='2' /&gt;&lt;ctrl name='Control' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                    </ui:Click.Target>
                                                  </ui:Click>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Select Item", "Check"}]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[expectedValues]">
                                                    <ui:ForEach.Body>
                                                      <ActivityAction x:TypeArguments="x:Object">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_112">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                            <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                          </Sequence.Variables>
                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                            <TryCatch.Try>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_65">
                                                                  <ui:GetValue.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                  </ui:GetValue.Target>
                                                                  <ui:GetValue.Value>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                  </ui:GetValue.Value>
                                                                </ui:GetValue>
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                                                <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_164" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                          <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_56">
                                                            <If.Then>
                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_165" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_111">
                                                                <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_55">
                                                                  <If.Else>
                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_166" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                  </If.Else>
                                                                </If>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ForEach.Body>
                                                  </ui:ForEach>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:WindowScope.Body>
                                          </ui:WindowScope>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_25">
                                            <Sequence DisplayName="Check Element -&gt; Find button" sap2010:WorkflowViewState.IdRef="Sequence_120">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                              </Sequence.Variables>
                                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_22" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                <ui:WindowScope.Body>
                                                  <ActivityAction x:TypeArguments="x:Object">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                    </ActivityAction.Argument>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_119">
                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Find context menu" sap2010:WorkflowViewState.IdRef="Click_210" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                        <ui:Click.CursorPosition>
                                                          <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                        </ui:Click.CursorPosition>
                                                        <ui:Click.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="cdb593d33c1b945baaebe1fa88c3475c" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='2' /&gt;&lt;ctrl name='Find' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                        </ui:Click.Target>
                                                      </ui:Click>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Find Element", "Wait Element Vanish", "Find Relative Element"}]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[expectedValues]">
                                                        <ui:ForEach.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_118">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                              </Sequence.Variables>
                                                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                                                <TryCatch.Try>
                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_115">
                                                                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_66">
                                                                      <ui:GetValue.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                      </ui:GetValue.Target>
                                                                      <ui:GetValue.Value>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                      </ui:GetValue.Value>
                                                                    </ui:GetValue>
                                                                  </Sequence>
                                                                </TryCatch.Try>
                                                                <TryCatch.Catches>
                                                                  <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                                                    <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_116">
                                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_167" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </Catch>
                                                                </TryCatch.Catches>
                                                              </TryCatch>
                                                              <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_58">
                                                                <If.Then>
                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_168" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                </If.Then>
                                                                <If.Else>
                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_117">
                                                                    <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_57">
                                                                      <If.Else>
                                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_169" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                      </If.Else>
                                                                    </If>
                                                                  </Sequence>
                                                                </If.Else>
                                                              </If>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:ForEach.Body>
                                                      </ui:ForEach>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:WindowScope.Body>
                                              </ui:WindowScope>
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_26">
                                                <Sequence DisplayName="Check Element -&gt; Window button" sap2010:WorkflowViewState.IdRef="Sequence_126">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                                  </Sequence.Variables>
                                                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_23" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                    <ui:WindowScope.Body>
                                                      <ActivityAction x:TypeArguments="x:Object">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                        </ActivityAction.Argument>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_125">
                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Window context menu" sap2010:WorkflowViewState.IdRef="Click_211" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="cd8bd21c99994f05907a10cdac9e1113" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='2' /&gt;&lt;ctrl name='Window' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                            </ui:Click.Target>
                                                          </ui:Click>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Close"}]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[expectedValues]">
                                                            <ui:ForEach.Body>
                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_124">
                                                                  <Sequence.Variables>
                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                                  </Sequence.Variables>
                                                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                                                                    <TryCatch.Try>
                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_121">
                                                                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_67">
                                                                          <ui:GetValue.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                          </ui:GetValue.Target>
                                                                          <ui:GetValue.Value>
                                                                            <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                          </ui:GetValue.Value>
                                                                        </ui:GetValue>
                                                                      </Sequence>
                                                                    </TryCatch.Try>
                                                                    <TryCatch.Catches>
                                                                      <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                                                        <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                          <ActivityAction.Argument>
                                                                            <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                          </ActivityAction.Argument>
                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_122">
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_170" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </Sequence>
                                                                        </ActivityAction>
                                                                      </Catch>
                                                                    </TryCatch.Catches>
                                                                  </TryCatch>
                                                                  <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_60">
                                                                    <If.Then>
                                                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_171" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_123">
                                                                        <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_59">
                                                                          <If.Else>
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_172" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:ForEach.Body>
                                                          </ui:ForEach>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:WindowScope.Body>
                                                  </ui:WindowScope>
                                                </Sequence>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_27">
                                                    <Sequence DisplayName="Check Text button" sap2010:WorkflowViewState.IdRef="Sequence_131">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                                      </Sequence.Variables>
                                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_24" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                        <ui:WindowScope.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                            </ActivityAction.Argument>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_130">
                                                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text context menu" sap2010:WorkflowViewState.IdRef="Click_212" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                <ui:Click.CursorPosition>
                                                                  <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                                                                </ui:Click.CursorPosition>
                                                                <ui:Click.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2964673d7f684bbae1f67924f55a0e69" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Text' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                </ui:Click.Target>
                                                              </ui:Click>
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Mouse", "Scrape", "Copy Text", "Set Text", "Select &amp;amp; Copy"}]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[expectedValues]">
                                                                <ui:ForEach.Body>
                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_129">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                                      </Sequence.Variables>
                                                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                                                        <TryCatch.Try>
                                                                          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_68">
                                                                            <ui:GetValue.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                            </ui:GetValue.Target>
                                                                            <ui:GetValue.Value>
                                                                              <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                            </ui:GetValue.Value>
                                                                          </ui:GetValue>
                                                                        </TryCatch.Try>
                                                                        <TryCatch.Catches>
                                                                          <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                                                            <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                              </ActivityAction.Argument>
                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_127">
                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_173" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                              </Sequence>
                                                                            </ActivityAction>
                                                                          </Catch>
                                                                        </TryCatch.Catches>
                                                                      </TryCatch>
                                                                      <If sap2010:Annotation.AnnotationText="Add special case where the text is &quot;&amp;amp;&quot; in the html and needs to be replaced so the check will work properly" Condition="[item.ToString.Contains(&quot;&amp;amp;&quot;)]" sap2010:WorkflowViewState.IdRef="If_63">
                                                                        <If.Then>
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Object">[item]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Object">[item.ToString.Replace("&amp;amp;", "&amp;")]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </If.Then>
                                                                      </If>
                                                                      <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_62">
                                                                        <If.Then>
                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_174" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                        </If.Then>
                                                                        <If.Else>
                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_128">
                                                                            <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_61">
                                                                              <If.Else>
                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_175" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                              </If.Else>
                                                                            </If>
                                                                          </Sequence>
                                                                        </If.Else>
                                                                      </If>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </ui:ForEach.Body>
                                                              </ui:ForEach>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:WindowScope.Body>
                                                      </ui:WindowScope>
                                                    </Sequence>
                                                    <FlowStep.Next>
                                                      <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_28">
                                                        <Sequence DisplayName="Check Text-&gt; Mouse button" sap2010:WorkflowViewState.IdRef="Sequence_137">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                                          </Sequence.Variables>
                                                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_25" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                            <ui:WindowScope.Body>
                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_136">
                                                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Mouse context menu" sap2010:WorkflowViewState.IdRef="Click_213" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                    <ui:Click.CursorPosition>
                                                                      <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                                    </ui:Click.CursorPosition>
                                                                    <ui:Click.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="0ba064cdc299ebf1f04e7b1b24aa6b8d" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='Mouse' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                    </ui:Click.Target>
                                                                  </ui:Click>
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Click", "Right Click", "Double Click" ,"Hover"}]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[expectedValues]">
                                                                    <ui:ForEach.Body>
                                                                      <ActivityAction x:TypeArguments="x:Object">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                        </ActivityAction.Argument>
                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                                                          <Sequence.Variables>
                                                                            <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                            <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                                          </Sequence.Variables>
                                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                                                            <TryCatch.Try>
                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_132">
                                                                                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_69">
                                                                                  <ui:GetValue.Target>
                                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                                  </ui:GetValue.Target>
                                                                                  <ui:GetValue.Value>
                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                                  </ui:GetValue.Value>
                                                                                </ui:GetValue>
                                                                              </Sequence>
                                                                            </TryCatch.Try>
                                                                            <TryCatch.Catches>
                                                                              <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                                                                <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                                  </ActivityAction.Argument>
                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_133">
                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_176" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </ActivityAction>
                                                                              </Catch>
                                                                            </TryCatch.Catches>
                                                                          </TryCatch>
                                                                          <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_65">
                                                                            <If.Then>
                                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_177" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                            </If.Then>
                                                                            <If.Else>
                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_134">
                                                                                <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_64">
                                                                                  <If.Else>
                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_178" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                                  </If.Else>
                                                                                </If>
                                                                              </Sequence>
                                                                            </If.Else>
                                                                          </If>
                                                                        </Sequence>
                                                                      </ActivityAction>
                                                                    </ui:ForEach.Body>
                                                                  </ui:ForEach>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:WindowScope.Body>
                                                          </ui:WindowScope>
                                                        </Sequence>
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_29">
                                                            <Sequence DisplayName="Check Text-&gt; Scrape button" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                                              </Sequence.Variables>
                                                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_26" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                                <ui:WindowScope.Body>
                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_142">
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Scrape context menu" sap2010:WorkflowViewState.IdRef="Click_214" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8c62a85594ed23fa758a73b18397b304" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='2' /&gt;&lt;ctrl name='Scrape' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Screen Scraping", "Scrape Relative", "Scrape Data"}]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[expectedValues]">
                                                                        <ui:ForEach.Body>
                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                            <ActivityAction.Argument>
                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                            </ActivityAction.Argument>
                                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                                              </Sequence.Variables>
                                                                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                                                                <TryCatch.Try>
                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_138">
                                                                                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_70">
                                                                                      <ui:GetValue.Target>
                                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                                      </ui:GetValue.Target>
                                                                                      <ui:GetValue.Value>
                                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                                      </ui:GetValue.Value>
                                                                                    </ui:GetValue>
                                                                                  </Sequence>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                                                                    <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_139">
                                                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_179" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                              </TryCatch>
                                                                              <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_67">
                                                                                <If.Then>
                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_180" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_140">
                                                                                    <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_66">
                                                                                      <If.Else>
                                                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_181" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </Sequence>
                                                                                </If.Else>
                                                                              </If>
                                                                            </Sequence>
                                                                          </ActivityAction>
                                                                        </ui:ForEach.Body>
                                                                      </ui:ForEach>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </ui:WindowScope.Body>
                                                              </ui:WindowScope>
                                                            </Sequence>
                                                            <FlowStep.Next>
                                                              <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_30">
                                                                <Sequence DisplayName="Check Image button" sap2010:WorkflowViewState.IdRef="Sequence_148">
                                                                  <Sequence.Variables>
                                                                    <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                                                  </Sequence.Variables>
                                                                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_27" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                                    <ui:WindowScope.Body>
                                                                      <ActivityAction x:TypeArguments="x:Object">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                        </ActivityAction.Argument>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_147">
                                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image context menu" sap2010:WorkflowViewState.IdRef="Click_215" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                            <ui:Click.CursorPosition>
                                                                              <ui:CursorPosition OffsetX="20" OffsetY="51" Position="TopLeft" />
                                                                            </ui:Click.CursorPosition>
                                                                            <ui:Click.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ba3d0718f969ab353b063368fd6bd38d" Selector="&lt;ctrl name='Actions' role='grouping' /&gt;&lt;ctrl name='Image' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:Click.Target>
                                                                          </ui:Click>
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Mouse", "Find Image", "Wait Image Vanish"}]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[expectedValues]">
                                                                            <ui:ForEach.Body>
                                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                                <ActivityAction.Argument>
                                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                </ActivityAction.Argument>
                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                                                  </Sequence.Variables>
                                                                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                                                                    <TryCatch.Try>
                                                                                      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_71">
                                                                                        <ui:GetValue.Target>
                                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea8fb373c4055eda739fde4115001074" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                                        </ui:GetValue.Target>
                                                                                        <ui:GetValue.Value>
                                                                                          <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                                        </ui:GetValue.Value>
                                                                                      </ui:GetValue>
                                                                                    </TryCatch.Try>
                                                                                    <TryCatch.Catches>
                                                                                      <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                                                                                        <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_144">
                                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_182" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </Catch>
                                                                                    </TryCatch.Catches>
                                                                                  </TryCatch>
                                                                                  <If sap2010:Annotation.AnnotationText="Add special case where the text is &quot;&amp;amp;&quot; in the html and needs to be replaced so the check will work properly" Condition="[item.ToString.Contains(&quot;&amp;amp;&quot;)]" sap2010:WorkflowViewState.IdRef="If_68">
                                                                                    <If.Then>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Object">[item]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Object">[item.ToString.Replace("&amp;amp;", "&amp;")]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                  <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_70">
                                                                                    <If.Then>
                                                                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_183" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                                    </If.Then>
                                                                                    <If.Else>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_145">
                                                                                        <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_69">
                                                                                          <If.Else>
                                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_184" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </If.Else>
                                                                                  </If>
                                                                                </Sequence>
                                                                              </ActivityAction>
                                                                            </ui:ForEach.Body>
                                                                          </ui:ForEach>
                                                                        </Sequence>
                                                                      </ActivityAction>
                                                                    </ui:WindowScope.Body>
                                                                  </ui:WindowScope>
                                                                </Sequence>
                                                                <FlowStep.Next>
                                                                  <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_31">
                                                                    <Sequence DisplayName="Check Image -&gt; Mouse button" sap2010:WorkflowViewState.IdRef="Sequence_154">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="scg:List(x:String)" Name="expectedValues" />
                                                                      </Sequence.Variables>
                                                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Basic Recording Window" sap2010:WorkflowViewState.IdRef="WindowScope_28" InformativeScreenshot="543c997283718656056881f625b3f3bf" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' title='Basic Recording' /&gt;">
                                                                        <ui:WindowScope.Body>
                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                            <ActivityAction.Argument>
                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                            </ActivityAction.Argument>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_153">
                                                                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Mouse context menu" sap2010:WorkflowViewState.IdRef="Click_216" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                                <ui:Click.CursorPosition>
                                                                                  <ui:CursorPosition OffsetX="{x:Null}" OffsetY="{x:Null}" Position="Center" />
                                                                                </ui:Click.CursorPosition>
                                                                                <ui:Click.Target>
                                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f62fb927f6227f92caf5bdebdaf7dd67" Selector="&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='Mouse' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                </ui:Click.Target>
                                                                              </ui:Click>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[expectedValues]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) From {"Click", "Right Click", "Double Click" ,"Hover"}]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[expectedValues]">
                                                                                <ui:ForEach.Body>
                                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_152">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="expectedValue" />
                                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="elementNotPresent" />
                                                                                      </Sequence.Variables>
                                                                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                                                                        <TryCatch.Try>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_149">
                                                                                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Check group" sap2010:WorkflowViewState.IdRef="GetValue_72">
                                                                                              <ui:GetValue.Target>
                                                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1929bcb5c140199aa302af9a1081879a" Selector="[&quot;&lt;wnd app='uistudio.exe' cls='HwndWrapper*' idx='1' /&gt;&lt;ctrl name='&quot; + item.ToString + &quot;' role='push button' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                                                                                              </ui:GetValue.Target>
                                                                                              <ui:GetValue.Value>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[expectedValue]</OutArgument>
                                                                                              </ui:GetValue.Value>
                                                                                            </ui:GetValue>
                                                                                          </Sequence>
                                                                                        </TryCatch.Try>
                                                                                        <TryCatch.Catches>
                                                                                          <Catch x:TypeArguments="ui:SelectorNotFoundException" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                                                                            <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_150">
                                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_185" Level="Error" Message="[item.ToString + &quot; button was not found&quot;]" />
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[elementNotPresent]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </Catch>
                                                                                        </TryCatch.Catches>
                                                                                      </TryCatch>
                                                                                      <If Condition="[expectedValue = item.ToString]" sap2010:WorkflowViewState.IdRef="If_72">
                                                                                        <If.Then>
                                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_186" Level="Info" Message="[item.ToString + &quot; text is correct&quot;]" />
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_151">
                                                                                            <If Condition="[elementNotPresent = True]" sap2010:WorkflowViewState.IdRef="If_71">
                                                                                              <If.Else>
                                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_187" Level="Error" Message="[item.ToString +&quot; text is &quot; + expectedValue + &quot; instead of &quot; + expectedValue]" />
                                                                                              </If.Else>
                                                                                            </If>
                                                                                          </Sequence>
                                                                                        </If.Else>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </ui:ForEach.Body>
                                                                              </ui:ForEach>
                                                                            </Sequence>
                                                                          </ActivityAction>
                                                                        </ui:WindowScope.Body>
                                                                      </ui:WindowScope>
                                                                    </Sequence>
                                                                  </FlowStep>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <sads:DebugSymbol.Symbol>dzhDOlxkb2N1bWVudGUgcHJvaWVjdGVcUUFcc2FuaXR5QmFzaWNSZWNvcmRpbmdXaW5kb3cueGFtbOkEPwOYDg8CAQFHCa0CFAMB4gSwAg2MAxgDAboEjwMR6wMcAwGSBO4DFcoEIAMB6gPNBBmpBSQDAcIDrAUdiAYoAwGaA4sGIekGLAMB8wLsBiXKBzADAcwCzQcpqwg0AwGlAq4ILYwJOAMB/gGPCTHtCTwDAdcB8Ak12ApAAwGnAdsKObkLRAMBgAG8Cz2aDEgCAVmdDEGFDUwCASmIDUXmDVACAQJLC0tSAwHkBUwLUCADAd8FUQurAhADAeUErAILrAJSAwHjBLQCD4sDIAMBuwSTAxPqAyQDAZME8gMXyQQoAwHrA9EEG6gFLAMBwwOwBR+HBjADAZsDjwYj6AY0AwH0AvAGJ8kHOAMBzQLRByuqCDwDAaYCsggviwlAAwH/AZMJM+wJRAMB2AH0CTfXCkgDAagB3wo7uAtMAwGBAcALP5kMUAIBWqEMQ4QNVAIBKowNR+UNWAIBA0sbSyUDAeUFTokBTtYBAwHjBU7hAU7nAQMB4gVMU0xrAwHgBVEZUTcDAeYEUw+mAhoDAeoEqQIPqQKkAQMB6ASsAhusAiUDAeQEtAKSArQC3wIDAeEEugIViAMgAwG8BJMDlgKTA+MCAwG5BJkDGecDJAMBlATyA5oC8gPnAgMBkQT4Ax3GBCgDAewD0QSeAtEE6wIDAekD1wQhpQUsAwHEA7AFogKwBe8CAwHBA7YFJYQGMAMBnAOPBqYCjwbzAgMBmQOVBinlBjQDAfUC8AaqAvAG9wIDAfIC9gYtxgc4AwHOAtEHrgLRB/sCAwHLAtcHMacIPAMBpwKyCLICsgj/AgMBpAK4CDWICUADAYACkwm2ApMJgwMDAf0BmQk56QlEAwHZAfQJugL0CYcDAwHWAfoJPdQKSAMBqQHfCr4C3wqLAwMBpgHlCkG1C0wDAYIBwAvCAsALjwMCAX/GC0WWDFACAVuhDMYCoQyTAwIBWKcMSYENVAIBK4wNygKMDZcDAgEokg1N4g1YAgEEVBGlAhwDAesEqQJ+qQKhAQMB6QS7AhfCAiIDAd0EwwIXygIgAwHZBMsCF4cDJAMBvQSaAxuhAyYDAbUEogMbqQMkAwGxBKoDG+YDKAMBlQT5Ax+ABCoDAY0EgQQfiAQoAwGJBIkEH8UELAMB7QPYBCPfBC4DAeUD4AQj5wQsAwHhA+gEI6QFMAMBxQO3BSe+BTIDAb0DvwUnxgUwAwG5A8cFJ4MGNAMBnQOWBiudBjYDAZcDngYrpQY0AwGTA6YGK+QGOAMB9gL3Bi/+BjoDAfAC/wYvhgc4AwHsAocHL8UHPAMBzwLYBzPfBz4DAckC4Acz5wc8AwHFAugHM6YIQAMBqAK5CDfACEIDAaICwQg3yAhAAwGeAskIN4cJRAMBgQKaCTuhCUYDAfsBogk7qQlEAwH3AaoJO+gJSAMB2gH7CT+CCkoDAdIBgwo/igpIAwHOAYsKP9MKTAMBqgHmCkPtCk4DAaQB7gpD9QpMAwGgAfYKQ7QLUAMBgwHHC0fOC1ICAX3PC0fWC1ACAXnXC0eVDFQCAVyoDEuvDFYCAVSwDEu3DFQCAVC4DEuADVgCASyTDU+aDVoCASabDU+iDVgCASKjDU/hDVwCAQVVE6QCJAMB7ATAAqoBwAKMAgMB4AS9AkO9AkcDAd8EvQI2vQI6AwHeBMgCTMgCgQEDAdwExQJNxQJdAwHaBMsCogHLArQBAwHXBNECHYQDKAMBvgSfA64BnwOUAgMBuAScA0ecA0sDAbcEnAM6nAM+AwG2BKcDUKcDjAEDAbQEpANRpANhAwGyBKoDpgGqA7gBAwGvBLADIeMDLAMBlgT+A7IB/gOXAgMBkAT7A0v7A08DAY8E+wM++wNCAwGOBIYEVIYEhgEDAYwEgwRVgwRlAwGKBIkEqgGJBLwBAwGHBI8EJcIEMAMB7gPdBLYB3QSbAgMB6APaBE/aBFMDAecD2gRC2gRGAwHmA+UEWOUEkwEDAeQD4gRZ4gRpAwHiA+gErgHoBMABAwHfA+4EKaEFNAMBxgO8BboBvAWZAgMBwAO5BVO5BVcDAb8DuQVGuQVKAwG+A8QFXMQFqQEDAbwDwQVdwQVtAwG6A8cFsgHHBcQBAwG3A80FLYAGOAMBngObBr4BmwapAgMBmAOjBmCjBr4BAwGWA6AGYaAGcQMBlAOmBrYBpgbIAQMBkQOsBjHhBjwDAfcC/AbCAfwGsAIDAfEChAdkhAeWAQMB7wKBB2WBB3UDAe0Chwe7AYcHzQEDAeoCjQc1wgdAAwHQAt0HxgHdB7MCAwHKAuUHaOUHmwEDAcgC4gdp4gd5AwHGAugHvwHoB9EBAwHDAu4HOaMIRAMBqQK+CMoBvgi0AgMBowLGCGzGCMcBAwGhAsMIbcMIfQMBnwLJCMMByQjVAQMBnALPCD2ECUgDAYICnwnOAZ8JugIDAfwBpwlwpwmUAQMB+gGkCXGkCYEBAwH4AaoJxwGqCdkBAwH1AbAJQeUJTAMB2wGACtIBgAquAgMB1QH9CWv9CW8DAdQB/Qle/QliAwHTAYgKdIgK1AEDAdEBhQp1hQqFAQMBzwGLCssBiwrdAQMBzAGRCkXQClADAasB6wrWAesKwQIDAaUB8wp48wrEAQMBowHwCnnwCokBAwGhAfYKzwH2CuEBAwGeAfwKSbELVAMBhAHMC9oBzAvGAgIBftQLfNQLzAECAXzRC33RC40BAgF61wvTAdcL5QECAXfdC02SDFgCAV2tDN4BrQy7AgIBV6oMd6oMewIBVqoMaqoMbgIBVbUMgAG1DMcBAgFTsgyBAbIMkQECAVG4DNcBuAzpAQIBTr4MUf0MXAIBLZgN4gGYDc0CAgEnoA2EAaAN0AECASWdDYUBnQ2VAQIBI6MN2wGjDe0BAgEgqQ1V3g1gAgEGVZUCVeICAwHeBVsZoQIkAwHtBNYCH/UCKgMByQT2Ah+DAyQDAb8EtQMj1AMuAwGhBNUDI+IDKAMBlwSUBCezBDIDAfkDtAQnwQQsAwHvA/MEK5IFNgMB0QOTBSugBTADAccD0gUv8QU6AwGpA/IFL/8FNAMBnwOxBjPSBj4DAYID0wYz4AY4AwH4ApIHN7MHQgMB2wK0BzfBBzwDAdEC8wc7lAhGAwG0ApUIO6IIQAMBqgLUCD/1CEoDAY0C9gg/gwlEAwGDArUJQ9YJTgMB5gHXCUPkCUgDAdwBlgpHtQpSAwG+AbYKR8EKTAMBtgHCCkfPCkwDAawBgQtLogtWAwGPAaMLS7ALUAMBhQHiC0+DDFoCAWiEDE+RDFQCAV7DDFPiDF4CAUDjDFPuDFgCATjvDFP8DFgCAS6uDVfPDWICARHQDVfdDVwCAQdnG5sBJgMBvwWcARugAiYDAe4E2AIj3wIxAwHSBOcCJ/ECMgMBygT2Ai32Ak4DAcAE+AIj+ALFAQMBxgT7AiOBAy4DAcEEtwMnvgM1AwGqBMYDK9ADNgMBogTVAzHVA1IDAZgE1wMn1wPJAQMBngTaAyfgAzIDAZkElgQrnQQ5AwGCBKUEL68EOgMB+gO0BDW0BFYDAfADtgQrtgTNAQMB9gO5BCu/BDYDAfED9QQv/AQ9AwHaA4QFM44FPgMB0gOTBTmTBVoDAcgDlQUvlQXRAQMBzgOYBS+eBToDAckD1AUz2wVBAwGyA+MFN+0FQgMBqgPyBT3yBV4DAaAD9AUz9AXVAQMBpgP3BTP9BT4DAaEDswY3vAZCAwGLA8QGO84GRgMBgwPTBkHTBmIDAfkC1QY31QbZAQMB/wLYBjfeBkIDAfoClAc7nQdGAwHkAqUHP68HSgMB3AK0B0W0B2YDAdICtgc7tgfdAQMB2AK5Bzu/B0YDAdMC9Qc//gdKAwG9AoYIQ5AITgMBtQKVCEmVCGoDAasClwg/lwjhAQMBsQKaCD+gCEoDAawC1ghD3whOAwGWAucIR/EIUgMBjgL2CE32CG4DAYQC+AhD+AjlAQMBigL7CEOBCU4DAYUCtwlHwAlSAwHvAcgJS9IJVgMB5wHXCVHXCXIDAd0B2QlH2QnpAQMB4wHcCUfiCVIDAd4BmApLnwpZAwHHAacKT7EKWgMBvwG2CvcBtgqoAgMBtwG4Cku/ClQDAbkBwgpVwgp2AwGtAcQKS8QK7QEDAbMBxwpLzQpWAwGuAYMLT4wLWgMBmAGUC1OeC14DAZABowtZowt6AwGGAaULT6UL8QEDAYwBqAtPrgtaAwGHAeQLU+0LXgIBcfULV/8LYgIBaYQMXYQMfgIBX4YMU4YM9QECAWWJDFOPDF4CAWDFDFfMDGUCAUnUDFveDGYCAUHjDIMC4wy0AgIBOeUMV+wMYAIBO+8MYe8MggECAS/xDFfxDPkBAgE19AxX+gxiAgEwsA1buQ1mAgEawQ1fyw1qAgES0A1l0A2GAQIBCNINW9IN/QECAQ7VDVvbDWYCAQlrHXIrAwHaBXMdeiIDAdQFex2CASsDAdAFgwEdigEiAwHKBYsBHZIBKwMBxgWTAR2aASIDAcAFoAEdpwErAwG7BagBHa8BIgMBtQWwAR23ASsDAbEFuAEdvwEiAwGrBcABHccBKwMBpwXIAR3PASIDAaEF0AEd1wErAwGdBdgBHd8BIgMBlwXgAR3nASsDAZMF6AEd7wEiAwGNBfABHfcBKwMBiQX4AR3/ASIDAYMFgAIdhwIrAwH/BIgCHY8CIgMB+QSQAh2XAisDAfUEmAIdnwIiAwHvBN0CVt0CZQMB0wTaArYB2gLJAgMB1QToAinoAtEBAwHPBOkCKfACMgMBywT4ApIB+ALCAQMBxwT8AiWAAyoDAcIEvANavANpAwGrBLkDugG5A80CAwGtBMcDLccD1QEDAacEyAMtzwM2AwGjBNcDlgHXA8YBAwGfBNsDKd8DLgMBmgSbBF6bBG0DAYMEmAS+AZgE0QIDAYUEpgQxpgTZAQMB/wOnBDGuBDoDAfsDtgSaAbYEygEDAfcDugQtvgQyAwHyA/oEYvoEcQMB2wP3BMIB9wTVAgMB3QOFBTWFBd0BAwHXA4YFNY0FPgMB0wOVBZ4BlQXOAQMBzwOZBTGdBTYDAcoD2QVm2QV1AwGzA9YFxgHWBdkCAwG1A+QFOeQF4QEDAa8D5QU57AVCAwGrA/QFogH0BdIBAwGnA/gFNfwFOgMBogO0Bjm7BkcDAYwDxQY9xQblAQMBiAPGBj3NBkYDAYQD1QamAdUG1gEDAYAD2QY53QY+AwH7ApUHPZwHSwMB5QKmB0GmB+kBAwHhAqcHQa4HSgMB3QK2B6oBtgfaAQMB2QK6Bz2+B0IDAdQC9gdB/QdPAwG+AocIRYcI7QEDAboCiAhFjwhOAwG2ApcIrgGXCN4BAwGyApsIQZ8IRgMBrQLXCEXeCFMDAZcC6AhJ6AjxAQMBkwLpCEnwCFIDAY8C+AiyAfgI4gEDAYsC/AhFgAlKAwGGArgJSb8JVwMB8AHJCU3JCfUBAwHsAcoJTdEJVgMB6AHZCbYB2QnmAQMB5AHdCUnhCU4DAd8BnQp+nQqNAQMByAGaCt4BmgrxAgMBygGoClGoCvkBAwHEAakKUbAKWgMBwAG9Cna9CqMBAwG8AboKd7oKfQMBugHECroBxArqAQMBtAHICk3MClIDAa8BhAtRiwtfAwGZAZULVZUL/QEDAZUBlgtVnQteAwGRAaULvgGlC+4BAwGNAakLUa0LVgMBiAHlC1XsC2MCAXL2C1n2C4ECAgFu9wtZ/gtiAgFqhgzCAYYM8gECAWaKDFWODFoCAWHKDIoBygyZAQIBSscM6gHHDP0CAgFM1Qxd1QyFAgIBRtYMXd0MZgIBQuoMggHqDK8BAgE+5wyDAecMiQECATzxDMYB8Qz2AQIBNvUMWfkMXgIBMbENXbgNawIBG8INYcINiQICARfDDWHKDWoCARPSDcoB0g36AQIBD9YNXdoNYgIBCnBQcF0DAdsFbbABbd8BAwHdBXMrc1ADAdUFdSF1qwEDAdgFeCF44wEDAdYFgAFQgAFgAwHRBX2wAX2bAgMB0wWDASuDAVsDAcsFhQEhhQGzAQMBzgWIASGIAfYBAwHMBZABUJABXgMBxwWNAbABjQGOAgMByQWTASuTAVADAcEFlQEhlQGqAQMBxAWYASGYAd0BAwHCBaUBUKUBXQMBvAWiAbABogHfAQMBvgWoASuoAVADAbYFqgEhqgGxAQMBuQWtASGtAekBAwG3BbUBULUBYAMBsgWyAbABsgGSAgMBtAW4ASu4AVUDAawFugEhugGtAQMBrwW9ASG9AeoBAwGtBcUBUMUBXQMBqAXCAbABwgGWAgMBqgXIASvIAU4DAaIFygEhygGpAQMBpQXNASHNAd8BAwGjBdUBUNUBXAMBngXSAbAB0gGVAgMBoAXYASvYAUwDAZgF2gEh2gGoAQMBmwXdASHdAdwBAwGZBeUBUOUBXAMBlAXiAbAB4gGVAgMBlgXoASvoAUwDAY4F6gEh6gGoAQMBkQXtASHtAdwBAwGPBfUBUPUBXwMBigXyAbAB8gGPAgMBjAX4ASv4AVIDAYQF+gEh+gGrAQMBhwX9ASH9AeUBAwGFBYUCUIUCXAMBgAWCArABggKMAgMBggWIAiuIAkwDAfoEigIhigKoAQMB/QSNAiGNAtwBAwH7BJUCUJUCXQMB9gSSArABkgKNAgMB+ASYAiuYAk4DAfAEmgIhmgKpAQMB8wSdAiGdAt8BAwHxBOgCmQHoAs4BAwHQBO4CW+4CYQMBzgTrAlzrAm8DAcwE/AIz/AJPAwHDBP4CKf4C/wEDAcQExwOdAccD0gEDAagEzQNfzQNlAwGmBMoDYMoDcwMBpATbAzfbA1MDAZsE3QMt3QODAgMBnASmBKEBpgTWAQMBgASsBGOsBGkDAf4DqQRkqQR3AwH8A7oEO7oEVwMB8wO8BDG8BIcCAwH0A4UFpQGFBdoBAwHYA4sFZ4sFbQMB1gOIBWiIBXsDAdQDmQU/mQVbAwHLA5sFNZsFiwIDAcwD5AWpAeQF3gEDAbAD6gVr6gVxAwGuA+cFbOcFfwMBrAP4BUP4BV8DAaMD+gU5+gWPAgMBpAO5Bmy5BnsDAY0DtgbMAbYG3wIDAY8DxQatAcUG4gEDAYkDywZvywZ1AwGHA8gGcMgGgwEDAYUD2QZH2QZjAwH8AtsGPdsGkwIDAf0Cmgdwmgd/AwHmApcH0AGXB+MCAwHoAqYHsQGmB+YBAwHiAqwHc6wHeQMB4AKpB3SpB4cBAwHeAroHS7oHZwMB1QK8B0G8B5cCAwHWAvsHdPsHgwEDAb8C+AfUAfgH5wIDAcEChwi1AYcI6gEDAbsCjQh3jQh9AwG5AooIeIoIiwEDAbcCmwhPmwhrAwGuAp0IRZ0ImwIDAa8C3Ah43AiHAQMBmALZCNgB2QjrAgMBmgLoCLkB6AjuAQMBlALuCHvuCIEBAwGSAusIfOsIjwEDAZAC/AhT/AhvAwGHAv4ISf4InwIDAYgCvQl8vQmLAQMB8QG6CdwBugnvAgMB8wHJCb0ByQnyAQMB7QHPCX/PCYUBAwHrAcwJgAHMCZMBAwHpAd0JV90JcwMB4AHfCU3fCaMCAwHhAagKwQGoCvYBAwHFAa4KgwGuCokBAwHDAasKhAGrCpcBAwHBAcgKW8gKdwMBsAHKClHKCqcCAwGxAYkLhAGJC5MBAwGaAYYL5AGGC/cCAwGcAZULxQGVC/oBAwGWAZsLhwGbC40BAwGUAZgLiAGYC5sBAwGSAakLX6kLewMBiQGrC1WrC6sCAwGKAeoLiAHqC5cBAgFz5wvoAecL+wICAXX2C8kB9gv+AQIBb/wLiwH8C5EBAgFt+QuMAfkLnwECAWuKDGOKDH8CAWKMDFmMDK8CAgFj1QzNAdUMggICAUfbDI8B2wyVAQIBRdgMkAHYDKMBAgFD9Qxn9QyDAQIBMvcMXfcMswICATO2DZABtg2fAQIBHLMN8AGzDYMDAgEewg3RAcINhgICARjIDZMByA2ZAQIBFsUNlAHFDacBAgEU1g1r1g2HAQIBC9gNYdgNtwICAQx1jwF1qAEDAdkFeJABeOABAwHXBYUBjwGFAbABAwHPBYgBkAGIAfMBAwHNBZUBjwGVAacBAwHFBZgBkAGYAdoBAwHDBaoBjwGqAa4BAwG6Ba0BkAGtAeYBAwG4BboBjwG6AaoBAwGwBb0BkAG9AecBAwGuBcoBjwHKAaYBAwGmBc0BkAHNAdwBAwGkBdoBjwHaAaUBAwGcBd0BkAHdAdkBAwGaBeoBjwHqAaUBAwGSBe0BkAHtAdkBAwGQBfoBjwH6AagBAwGIBf0BkAH9AeIBAwGGBYoCjwGKAqUBAwH+BI0CkAGNAtkBAwH8BJoCjwGaAqYBAwH0BJ0CkAGdAtwBAwHyBP4CmQH+AvwBAwHFBN0DnQHdA4ACAwGdBLwEoQG8BIQCAwH1A5sFpQGbBYgCAwHNA/oFqQH6BYwCAwGlA9sGrQHbBpACAwH+ArwHsQG8B5QCAwHXAp0ItQGdCJgCAwGwAv4IuQH+CJwCAwGJAt8JvQHfCaACAwHiAcoKwQHKCqQCAwGyAasLxQGrC6gCAwGLAYwMyQGMDKwCAgFk9wzNAfcMsAICATTYDdEB2A20AgIBDQ==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Delay_5" sap:VirtualizedContainerService.HintSize="1096,22.4" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="1096,107.2" />
      <sap2010:ViewStateData Id="GetValue_20" sap:VirtualizedContainerService.HintSize="653.6,107.2" />
      <sap2010:ViewStateData Id="LogMessage_70" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_71" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="653.6,242.4" />
      <sap2010:ViewStateData Id="GetValue_21" sap:VirtualizedContainerService.HintSize="653.6,107.2" />
      <sap2010:ViewStateData Id="LogMessage_72" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_73" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="653.6,242.4" />
      <sap2010:ViewStateData Id="GetValue_22" sap:VirtualizedContainerService.HintSize="653.6,107.2" />
      <sap2010:ViewStateData Id="LogMessage_74" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_75" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="676,1369.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_23" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_76" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_77" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_24" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_78" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_79" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_25" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_80" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_81" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_26" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_82" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_83" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_27" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_84" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_85" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_28" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_86" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_87" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_29" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_88" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_89" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="GetValue_30" sap:VirtualizedContainerService.HintSize="653,106" />
      <sap2010:ViewStateData Id="LogMessage_90" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_91" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="653,238" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="675,3476">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="698.4,5010.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_7" sap:VirtualizedContainerService.HintSize="712.8,5157.6" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="735.2,5282.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="757.6,5407.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_58" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1096,5556.8" />
      <sap2010:ViewStateData Id="Delay_7" sap:VirtualizedContainerService.HintSize="1094,22" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="1118.4,5981.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_199" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_57" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_143" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="825,183" />
      <sap2010:ViewStateData Id="LogMessage_144" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_145" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_41" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_42" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="847,856">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="863,989" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="885,1359">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_14" sap:VirtualizedContainerService.HintSize="899,1505" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_201" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_58" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_146" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="825,333" />
      <sap2010:ViewStateData Id="LogMessage_147" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_148" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_44" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="847,1006">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="863,1139" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="885,1509">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_15" sap:VirtualizedContainerService.HintSize="899,1655" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_203" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_59" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_149" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="825,333" />
      <sap2010:ViewStateData Id="LogMessage_150" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_151" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_45" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_46" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="847,1006">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="863,1139" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="885,1509">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_16" sap:VirtualizedContainerService.HintSize="899,1655" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_205" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_60" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_152" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="825,333" />
      <sap2010:ViewStateData Id="LogMessage_153" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_154" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_47" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_48" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="847,1006">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="863,1139" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="885,1509">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_17" sap:VirtualizedContainerService.HintSize="899,1655" />
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_206" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_61" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_155" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="825,333" />
      <sap2010:ViewStateData Id="LogMessage_156" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_157" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_49" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_50" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="847,1006">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="863,1139" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="885,1509">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_18" sap:VirtualizedContainerService.HintSize="899,1655" />
      <sap2010:ViewStateData Id="Sequence_96" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_207" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_63" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_102" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_158" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_97" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_159" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_160" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_51" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_52" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_99" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_9" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_100" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_19" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_101" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_208" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_64" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_103" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_161" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_104" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_11" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_162" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_163" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_53" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_105" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_54" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_10" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_20" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_108" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_209" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_65" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_109" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_164" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_110" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_12" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_165" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_166" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_55" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_111" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_56" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_112" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_113" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_21" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_114" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_210" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_66" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_115" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_167" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_116" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_13" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_11" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_168" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_169" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_57" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_117" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_58" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_118" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_119" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_22" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_120" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_211" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_67" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_121" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_170" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_122" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_12" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_171" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_172" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_59" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_123" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_60" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_124" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_125" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_23" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_126" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_212" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_68" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_173" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_127" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="825,333" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_63" sap:VirtualizedContainerService.HintSize="825,249">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_174" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_175" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_61" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_128" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_62" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_129" sap:VirtualizedContainerService.HintSize="847,1295">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_14" sap:VirtualizedContainerService.HintSize="863,1428" />
      <sap2010:ViewStateData Id="Sequence_130" sap:VirtualizedContainerService.HintSize="885,1798">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_24" sap:VirtualizedContainerService.HintSize="899,1944" />
      <sap2010:ViewStateData Id="Sequence_131" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_213" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_69" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_132" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_176" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_133" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_16" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_177" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_178" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_64" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_134" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_65" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_135" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_15" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_136" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_25" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_137" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_214" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_70" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_138" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_179" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_139" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_17" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_180" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_181" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_66" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_140" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_67" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_141" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_16" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_142" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_26" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_143" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_215" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_71" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_182" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_144" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="825,333" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_68" sap:VirtualizedContainerService.HintSize="825,249">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_183" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_184" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_69" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_145" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_70" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_146" sap:VirtualizedContainerService.HintSize="847,1295">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_17" sap:VirtualizedContainerService.HintSize="863,1428" />
      <sap2010:ViewStateData Id="Sequence_147" sap:VirtualizedContainerService.HintSize="885,1798">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_27" sap:VirtualizedContainerService.HintSize="899,1944" />
      <sap2010:ViewStateData Id="Sequence_148" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_216" sap:VirtualizedContainerService.HintSize="863,106" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="GetValue_72" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_149" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_185" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_150" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="825,457" />
      <sap2010:ViewStateData Id="LogMessage_186" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_187" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_71" sap:VirtualizedContainerService.HintSize="464,238" />
      <sap2010:ViewStateData Id="Sequence_151" sap:VirtualizedContainerService.HintSize="486,362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_72" sap:VirtualizedContainerService.HintSize="825,509" />
      <sap2010:ViewStateData Id="Sequence_152" sap:VirtualizedContainerService.HintSize="847,1130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_18" sap:VirtualizedContainerService.HintSize="863,1263" />
      <sap2010:ViewStateData Id="Sequence_153" sap:VirtualizedContainerService.HintSize="885,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_28" sap:VirtualizedContainerService.HintSize="899,1779" />
      <sap2010:ViewStateData Id="Sequence_154" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_31">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">630,675.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">740,535.5 740,584.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">630,574.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">730,625.5 730,675.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">630,474.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">730,527.3 730,574.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">630,374.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">730,427.3 730,474.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">630,274.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">730,327.3 730,374.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,678.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">570,704 600,704 600,300 630,300</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,577.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,628.5 470,678.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,476.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,529.3 470,577.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,375.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,428.3 470,476.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,274.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,327.3 470,375.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">80,634.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,660 310,660 310,300 370,300</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">80,554.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">180,607.3 180,634.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">80,454.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">180,507.3 180,554.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">80,364.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">180,417.3 180,454.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">80,284.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">180,337.3 180,364.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">380,127.5</av:Point>
            <av:Size x:Key="ShapeSize">200,112.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">480,240.3 480,270.3 180,270.3 180,284.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1064,996.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">450,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Height">960</x:Double>
            <x:Double x:Key="Width">1050</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">480,77.5 480,127.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="1104,1116.8" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>